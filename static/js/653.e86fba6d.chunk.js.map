{"version":3,"file":"static/js/653.e86fba6d.chunk.js","mappings":"0QAaMA,EAAwB,WAC5B,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BC,EAAAA,EAAAA,IAAgB,SAACC,GAAD,OAAWA,EAAMC,SACvDC,GADN,EAAOD,MAAP,EAAcE,YACGC,EAAAA,EAAAA,OACVC,GAAgBC,EAAAA,EAAAA,KAAhBD,aAEP,ECZK,SAAoBE,GACzB,OAA4BR,EAAAA,EAAAA,IAAgB,SAACC,GAAD,OAAWA,EAAMC,SAA/CE,GAAd,EAAOF,MAAP,EAAcE,YACd,GAAwBP,EAAAA,EAAAA,UAAmB,IAA3C,eAAOY,EAAP,KAAaC,EAAb,KACMP,GAAWE,EAAAA,EAAAA,MACVM,GAAcJ,EAAAA,EAAAA,KAAdI,WAEDC,EAAY,mCAAG,8FACbC,IAAAA,IAAA,uDACiDL,IACpDM,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACNA,EAAOL,EAAQK,EAAKC,QAAQ,IAAMb,EAAS,gBAE5Cc,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZP,GAAW,GACXR,EAAS,gBATM,2CAAH,qDAmBlB,OAPAkB,EAAAA,EAAAA,YAAU,WACHjB,EAGHM,EAAQN,EAAWY,QAAQ,IAF3BJ,MAID,IACI,CAACH,GDbOa,EADFC,EAAAA,EAAAA,MAANf,IACAC,GAAP,eAYA,OACE,SAACe,EAAA,EAAD,CAAeC,QAAS,IAAKC,WAAW,cAAcC,GAAI7B,KAAeW,EAAKmB,KAAMC,eAAa,EAACC,cAAY,EAA9G,UACE,gBAAKC,UAAU,cAAcC,QAZZ,SAACC,GACpB,IAAMC,EAASD,EAAMC,QACjBA,EAAOC,UAAUC,SAAS,8BAAiCF,EAAOG,QAAQ,wBAC5EtC,GAAa,GACbuC,YAAW,WACTnC,EAAS,eACR,OAMH,UACE,iBAAK4B,UAAU,oBAAf,WACE,gBAAKQ,IAAK9B,EAAK+B,KAAMC,IAAKhC,EAAKmB,QAC/B,qBAASG,UAAU,uBAAnB,WACE,oCACQ,0BAAOtB,EAAKmB,MAAQ,kBAE5B,sCACW,0BAAOnB,EAAKiC,SAAW,kBAElC,0CACe,0BAAOjC,EAAKkC,aAAe,kBAE1C,qCACU,0BAAOlC,EAAKmC,QAAU,kBAEhC,2CACgB,0BAAOnC,EAAKoC,cAAgB,kBAE5C,oCACW,KACT,cAAGC,KAAI,iBAAYrC,EAAKsC,SAAWb,OAAO,SAA1C,SACGzB,EAAKsC,SAAW,qBAIvB,mBACEhB,UAAU,6BACVC,QAAS,WACP1B,GAAa,IAHjB,qBAQA,mBAAQyB,UAAU,4BAAlB,4BAOV,EAAeiB,EAAAA,KAAWpD","sources":["modules/Airlines/modules/AirLineCard/AirLineCard.tsx","modules/Core/hooks/useGetInfo.ts"],"sourcesContent":["import React, {MouseEvent, useEffect, useState} from 'react';\r\nimport './AirLineCard.scss';\r\nimport {useNavigate, Navigate, useParams} from 'react-router-dom';\r\nimport {useAction} from '../../../Core/hooks/useAction';\r\nimport {useTypeSelector} from '../../../Core/hooks/useTypeSelector';\r\nimport axios from 'axios';\r\nimport {IAirline} from '../../../Core/models/Airline';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport {useGetInfo} from '../../../Core/hooks/useGetInfo';\r\n\r\n/**\r\n * Карточка авиалинни\r\n */\r\nconst AirLineCard: React.FC = () => {\r\n  const [animation, setAnimation] = useState(true);\r\n  const {cards, activeCard} = useTypeSelector((state) => state.cards);\r\n  const navigate = useNavigate();\r\n  const {setIsConfirm} = useAction();\r\n  const {id} = useParams();\r\n  const [card] = useGetInfo(id);\r\n\r\n  const handelClouse = (event: MouseEvent<HTMLElement>) => {\r\n    const target = event.target as HTMLElement;\r\n    if (target.classList.contains('airLineCard__button-close') || !target.closest('.airLineCard__body')) {\r\n      setAnimation(false);\r\n      setTimeout(() => {\r\n        navigate('/redramka');\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CSSTransition timeout={500} classNames=\"airLineCard\" in={animation && !!card.name} unmountOnExit mountOnEnter>\r\n      <div className=\"airLineCard\" onClick={handelClouse}>\r\n        <div className=\"airLineCard__body\">\r\n          <img src={card.logo} alt={card.name} />\r\n          <article className=\"airLineCard__article\">\r\n            <h2>\r\n              Name: <span>{card.name || 'Undefined'}</span>\r\n            </h2>\r\n            <p>\r\n              Country: <span>{card.country || 'Undefined'}</span>\r\n            </p>\r\n            <p>\r\n              Established: <span>{card.established || 'Undefined'}</span>\r\n            </p>\r\n            <p>\r\n              Slogan: <span>{card.slogan || 'Undefined'}</span>\r\n            </p>\r\n            <p>\r\n              Head quaters: <span>{card.head_quaters || 'Undefined'}</span>\r\n            </p>\r\n            <p>\r\n              Website:{' '}\r\n              <a href={`http://${card.website}`} target=\"_blank\">\r\n                {card.website || 'Undefined'}\r\n              </a>\r\n            </p>\r\n          </article>\r\n          <button\r\n            className=\"airLineCard__button-delete\"\r\n            onClick={() => {\r\n              setIsConfirm(true);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button className=\"airLineCard__button-close\">&#10008;</button>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default React.memo(AirLineCard);\r\n","import axios from 'axios';\r\nimport {useEffect, useState} from 'react';\r\nimport {useNavigate} from 'react-router';\r\nimport {IAirline} from '../models/Airline';\r\nimport {useAction} from './useAction';\r\nimport {useTypeSelector} from './useTypeSelector';\r\n\r\nexport function useGetInfo(id: any) {\r\n  const {cards, activeCard} = useTypeSelector((state) => state.cards);\r\n  const [card, setCard] = useState<IAirline>({} as IAirline);\r\n  const navigate = useNavigate();\r\n  const {setIsError} = useAction();\r\n\r\n  const getPassebger = async () => {\r\n    await axios\r\n      .get(`https://api.instantwebtools.net/v1/passenger/${id}`)\r\n      .then(({data}) => {\r\n        data ? setCard(data.airline[0]) : navigate('/redramka');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsError(true);\r\n        navigate('/redramka');\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (!activeCard) {\r\n      getPassebger();\r\n    } else {\r\n      setCard(activeCard.airline[0]);\r\n    }\r\n  }, []);\r\n  return [card];\r\n}\r\n"],"names":["AirLineCard","useState","animation","setAnimation","useTypeSelector","state","cards","navigate","activeCard","useNavigate","setIsConfirm","useAction","id","card","setCard","setIsError","getPassebger","axios","then","data","airline","catch","error","console","log","useEffect","useGetInfo","useParams","CSSTransition","timeout","classNames","in","name","unmountOnExit","mountOnEnter","className","onClick","event","target","classList","contains","closest","setTimeout","src","logo","alt","country","established","slogan","head_quaters","href","website","React"],"sourceRoot":""}
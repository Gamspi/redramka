{"version":3,"file":"static/js/653.1989b35f.chunk.js","mappings":"0QAaMA,EAAwB,WAC5B,OAA4BC,EAAAA,EAAAA,IAAgB,SAACC,GAAD,OAAWA,EAAMC,SACvDC,GADN,EAAOD,MAAP,EAAcE,YACGC,EAAAA,EAAAA,OACVC,GAAgBC,EAAAA,EAAAA,KAAhBD,aAEP,ECXK,SAAoBE,GACzB,OAA4BR,EAAAA,EAAAA,IAAgB,SAACC,GAAD,OAAWA,EAAMC,SAA/CE,GAAd,EAAOF,MAAP,EAAcE,YACd,GAAwBK,EAAAA,EAAAA,UAAmB,IAA3C,eAAOC,EAAP,KAAaC,EAAb,KACMR,GAAWE,EAAAA,EAAAA,MACVO,GAAcL,EAAAA,EAAAA,KAAdK,WAEDC,EAAY,mCAAG,8FACbC,IAAAA,IAAA,uDACiDN,IACpDO,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACNA,EAAOL,EAAQK,EAAKC,QAAQ,IAAMd,EAAS,QAE5Ce,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZP,GAAW,GACXT,EAAS,gBATM,2CAAH,qDAmBlB,OAPAmB,EAAAA,EAAAA,YAAU,WACHlB,EAGHO,EAAQP,EAAWa,QAAQ,IAF3BJ,MAID,IACI,CAACH,GDdOa,EADFC,EAAAA,EAAAA,MAANhB,IACAE,GAAP,eASA,OACE,SAACe,EAAA,EAAD,CAAeC,QAAS,IAAMC,WAAW,OAAOC,KAAMlB,EAAKmB,KAAMC,eAAa,EAACC,cAAY,EAA3F,UACE,gBAAKC,UAAU,OAAOC,QATL,SAACC,GACpB,IAAMC,EAASD,EAAMC,QACjBA,EAAOC,UAAUC,SAAS,uBAA0BF,EAAOG,QAAQ,gBACrEnC,EAAS,cAMT,UACE,iBAAK6B,UAAU,aAAf,WACE,gBAAKO,IAAK7B,EAAK8B,KAAMC,IAAK/B,EAAKmB,QAC/B,qBAASG,UAAU,gBAAnB,WACE,oCACQ,0BAAOtB,EAAKmB,MAAQ,kBAE5B,sCACW,0BAAOnB,EAAKgC,SAAW,kBAElC,0CACe,0BAAOhC,EAAKiC,aAAe,kBAE1C,qCACU,0BAAOjC,EAAKkC,QAAU,kBAEhC,2CACgB,0BAAOlC,EAAKmC,cAAgB,kBAE5C,oCACW,KACT,cAAGC,KAAI,iBAAYpC,EAAKqC,SAAWZ,OAAO,SAA1C,SACGzB,EAAKqC,SAAW,qBAIvB,mBACEf,UAAU,sBACVC,QAAS,WACP3B,GAAa,IAHjB,qBAQA,mBAAQ0B,UAAU,qBAAlB,4BAOV,EAAegB,EAAAA,KAAWjD","sources":["modules/Airlines/modules/AirLineCard/AirLineCard.tsx","modules/Core/hooks/useGetInfo.ts"],"sourcesContent":["import React, {MouseEvent, useEffect, useState} from 'react';\nimport './AirLineCard.scss';\nimport {useNavigate, Navigate, useParams} from 'react-router-dom';\nimport {useAction} from '../../../Core/hooks/useAction';\nimport {useTypeSelector} from '../../../Core/hooks/useTypeSelector';\nimport axios from 'axios';\nimport {IAirline} from '../../../Core/models/Airline';\nimport {CSSTransition} from 'react-transition-group';\nimport {useGetInfo} from '../../../Core/hooks/useGetInfo';\n\n/**\n * Карточка авиалинни\n */\nconst AirLineCard: React.FC = () => {\n  const {cards, activeCard} = useTypeSelector((state) => state.cards);\n  const navigate = useNavigate();\n  const {setIsConfirm} = useAction();\n  const {id} = useParams();\n  const [card] = useGetInfo(id);\n\n  const handelClouse = (event: MouseEvent<HTMLElement>) => {\n    const target = event.target as HTMLElement;\n    if (target.classList.contains('info__button-close') || !target.closest('.info__body')) {\n      navigate('/redramka');\n    }\n  };\n\n  return (\n    <CSSTransition timeout={4000} classNames=\"info\" in={!!card.name} unmountOnExit mountOnEnter>\n      <div className=\"info\" onClick={handelClouse}>\n        <div className=\"info__body\">\n          <img src={card.logo} alt={card.name} />\n          <article className=\"info__article\">\n            <h2>\n              Name: <span>{card.name || 'Undefined'}</span>\n            </h2>\n            <p>\n              Country: <span>{card.country || 'Undefined'}</span>\n            </p>\n            <p>\n              Established: <span>{card.established || 'Undefined'}</span>\n            </p>\n            <p>\n              Slogan: <span>{card.slogan || 'Undefined'}</span>\n            </p>\n            <p>\n              Head quaters: <span>{card.head_quaters || 'Undefined'}</span>\n            </p>\n            <p>\n              Website:{' '}\n              <a href={`http://${card.website}`} target=\"_blank\">\n                {card.website || 'Undefined'}\n              </a>\n            </p>\n          </article>\n          <button\n            className=\"info__button-delete\"\n            onClick={() => {\n              setIsConfirm(true);\n            }}\n          >\n            Delete\n          </button>\n          <button className=\"info__button-close\">&#10008;</button>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default React.memo(AirLineCard);\n","import axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport {useNavigate} from 'react-router';\nimport {IAirline} from '../models/Airline';\nimport {useAction} from './useAction';\nimport {useTypeSelector} from './useTypeSelector';\n\nexport function useGetInfo(id: any) {\n  const {cards, activeCard} = useTypeSelector((state) => state.cards);\n  const [card, setCard] = useState<IAirline>({} as IAirline);\n  const navigate = useNavigate();\n  const {setIsError} = useAction();\n\n  const getPassebger = async () => {\n    await axios\n      .get(`https://api.instantwebtools.net/v1/passenger/${id}`)\n      .then(({data}) => {\n        data ? setCard(data.airline[0]) : navigate('/');\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsError(true);\n        navigate('/redramka');\n      });\n  };\n  useEffect(() => {\n    if (!activeCard) {\n      getPassebger();\n    } else {\n      setCard(activeCard.airline[0]);\n    }\n  }, []);\n  return [card];\n}\n"],"names":["AirLineCard","useTypeSelector","state","cards","navigate","activeCard","useNavigate","setIsConfirm","useAction","id","useState","card","setCard","setIsError","getPassebger","axios","then","data","airline","catch","error","console","log","useEffect","useGetInfo","useParams","CSSTransition","timeout","classNames","in","name","unmountOnExit","mountOnEnter","className","onClick","event","target","classList","contains","closest","src","logo","alt","country","established","slogan","head_quaters","href","website","React"],"sourceRoot":""}
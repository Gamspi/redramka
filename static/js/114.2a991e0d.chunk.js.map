{"version":3,"file":"static/js/114.2a991e0d.chunk.js","mappings":"yOAYMA,EAAwB,WAC5B,OAA4BC,EAAAA,EAAAA,IAAgB,SAACC,GAAD,OAAWA,EAAMC,SAA/CC,GAAd,EAAOD,MAAP,EAAcC,YACRC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAmB,IAA3C,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAgBC,EAAAA,EAAAA,KAAhBD,aACAE,GAAMC,EAAAA,EAAAA,MAAND,IAEPE,EAAAA,EAAAA,YAAU,WACHV,EAUHK,EAAQL,EAAWW,QAAQ,IAT3BC,IAAAA,IAAA,uDACuDJ,IACpDK,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACNA,EAAOT,EAAQS,EAAKH,QAAQ,IAAMV,EAAS,QAE5Cc,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAKjB,IASH,OACE,gBAAKG,UAAU,OAAOC,QARH,SAACC,GACpB,IAAMC,EAASD,EAAMC,QACjBA,EAAOC,UAAUC,SAAS,uBAA0BF,EAAOG,QAAQ,gBACrExB,EAAS,cAKX,UACE,iBAAKkB,UAAU,aAAf,WACE,gBAAKO,IAAKtB,EAAKuB,KAAMC,IAAKxB,EAAKyB,QAC/B,qBAASV,UAAU,gBAAnB,WACE,oCACQ,0BAAOf,EAAKyB,WAEpB,sCACW,0BAAOzB,EAAK0B,cAEvB,0CACe,0BAAO1B,EAAK2B,kBAE3B,qCACU,0BAAO3B,EAAK4B,aAEtB,2CACgB,0BAAO5B,EAAK6B,mBAE5B,oCACW,KACT,cAAGC,KAAI,iBAAY9B,EAAK+B,SAAWb,OAAO,SAA1C,SACGlB,EAAK+B,iBAIZ,mBACEhB,UAAU,sBACVC,QAAS,WACPd,GAAa,IAHjB,qBAQA,mBAAQa,UAAU,qBAAlB,0BAMR,EAAeiB,EAAAA,KAAWxC,GC7EpByC,EAAiBD,EAAAA,MAAW,kBAAM,iCAMlCE,EAA2B,WAC/B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAK,YACLC,SACE,SAAC,EAAAC,SAAD,CAAUC,SAAS,GAAnB,UACE,SAACL,EAAD,MAJN,UAQE,SAAC,KAAD,CAAOE,KAAK,WAAWC,SAAS,SAAC,EAAD,SAElC,SAAC,KAAD,CAAOD,KAAK,IAAIC,SAAS,SAACG,EAAA,EAAD,UAK/B,EAAeP,EAAAA,KAAWE,GCtBpBM,EAAqB,kBAAM,SAAC,EAAD,KAEjC,EAAeR,EAAAA,KAAWQ","sources":["modules/Airlines/modules/AirLineCard/AirLineCard.tsx","modules/Airlines/layouts/AviaLineLayout.tsx","modules/Airlines/Airlines.tsx"],"sourcesContent":["import React, {MouseEvent, useEffect, useState} from 'react';\nimport './AirLineCard.scss';\nimport {useNavigate, Navigate, useParams} from 'react-router-dom';\nimport {useAction} from '../../../Core/hooks/useAction';\nimport {useTypeSelector} from '../../../Core/hooks/useTypeSelector';\nimport axios from 'axios';\nimport {IAirline} from '../../../Core/models/Airline';\nimport {CSSTransition} from 'react-transition-group';\n\n/**\n * Карточка авиалинни\n */\nconst AirLineCard: React.FC = () => {\n  const {cards, activeCard} = useTypeSelector((state) => state.cards);\n  const navigate = useNavigate();\n  const [card, setCard] = useState<IAirline>({} as IAirline);\n  const {setIsConfirm} = useAction();\n  const {id} = useParams();\n\n  useEffect(() => {\n    if (!activeCard) {\n      axios\n        .get(`https://api.instantwebtools.net/v1/passenger/${id}`)\n        .then(({data}) => {\n          data ? setCard(data.airline[0]) : navigate('/');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      setCard(activeCard.airline[0]);\n    }\n  }, []);\n\n  const handelClouse = (event: MouseEvent<HTMLElement>) => {\n    const target = event.target as HTMLElement;\n    if (target.classList.contains('info__button-close') || !target.closest('.info__body')) {\n      navigate('/redramka');\n    }\n  };\n\n  return (\n    <div className=\"info\" onClick={handelClouse}>\n      <div className=\"info__body\">\n        <img src={card.logo} alt={card.name} />\n        <article className=\"info__article\">\n          <h2>\n            Name: <span>{card.name}</span>\n          </h2>\n          <p>\n            Country: <span>{card.country}</span>\n          </p>\n          <p>\n            Established: <span>{card.established}</span>\n          </p>\n          <p>\n            Slogan: <span>{card.slogan}</span>\n          </p>\n          <p>\n            Head quaters: <span>{card.head_quaters}</span>\n          </p>\n          <p>\n            Website:{' '}\n            <a href={`http://${card.website}`} target=\"_blank\">\n              {card.website}\n            </a>\n          </p>\n        </article>\n        <button\n          className=\"info__button-delete\"\n          onClick={() => {\n            setIsConfirm(true);\n          }}\n        >\n          Delete\n        </button>\n        <button className=\"info__button-close\">&#10008;</button>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(AirLineCard);\n","import React, {Suspense} from 'react';\nimport {Route, Routes} from 'react-router-dom';\nimport NotFoundPage from '../../Core/components/NotFoundPage/NotFoundPage';\nimport AirLineCard from '../modules/AirLineCard/AirLineCard';\n\nconst PassengersList = React.lazy(() => import('../modules/PassengersList/PassengersList'));\n\n/**\n * Слой роутинга для модуля Airline\n */\n\nconst AviaLineLayout: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        path=\"/redramka\"\n        element={\n          <Suspense fallback=\"\">\n            <PassengersList />\n          </Suspense>\n        }\n      >\n        <Route path=\"card/:id\" element={<AirLineCard />} />\n      </Route>\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  );\n};\n\nexport default React.memo(AviaLineLayout);\n","import React from 'react';\r\n\r\nimport AviaLineLayout from './layouts/AviaLineLayout';\r\n\r\n/**\r\n * Входная точка модуля Airlines\r\n */\r\nconst Airlines: React.FC = () => <AviaLineLayout />;\r\n\r\nexport default React.memo(Airlines);\r\n"],"names":["AirLineCard","useTypeSelector","state","cards","activeCard","navigate","useNavigate","useState","card","setCard","setIsConfirm","useAction","id","useParams","useEffect","airline","axios","then","data","catch","error","console","log","className","onClick","event","target","classList","contains","closest","src","logo","alt","name","country","established","slogan","head_quaters","href","website","React","PassengersList","AviaLineLayout","path","element","Suspense","fallback","NotFoundPage","Airlines"],"sourceRoot":""}